% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitMovResHun.R
\name{fitMovResHun}
\alias{fitMovResHun}
\alias{fitMovResHun.parallel}
\title{Fit a Moving-Resting-Handling Model with Embedded Brownian Motion}
\usage{
fitMovResHun(data, start, lower = c(0.001, 0.001, 0.001, 0.001, 0.001),
  upper = c(10, 10, 10, 10, 0.999), integrControl = integr.control())

fitMovResHun.parallel(data, start, lower = c(0.001, 0.001, 0.001, 0.001,
  0.001), upper = c(10, 10, 10, 10, 0.999), numThreads = NULL,
  integrControl = integr.control())
}
\arguments{
\item{data}{a \code{data.frame} whose first column is the observation
time, and other columns are location coordinates.}

\item{start}{The initial value for optimization, in the order of rate
of moving, rate of resting, rate of handling, volatility and switching
probability.}

\item{lower, upper}{Lower and upper bound for optimization.}

\item{integrControl}{Integration control vector includes rel.tol,
abs.tol, and subdivisions.}

\item{numThreads}{int, the number of threads allocated for parallel
computation. The default setup is 3/4 available threads.}
}
\value{
A list of estimation result, with estimator, log-likelihood and
convergence code from \code{nloptr}.
}
\description{
Fit a Moving-Resting-Handling Model with Embedded Brownian Motion with
animal movement data at discretely observation times by maximizing
a full likelihood. The parallel code is provided as \code{fitMovResHun.parallel},
which improves the code speed significantly.
}
\examples{
## do not run !!
## time consuming work
## set.seed(06269)
## tgrid <- seq(0, 4000, by = 8)
## dat <- rMovResHun(tgrid, 4, 0.5, 0.1, 25, 0.8, 'm')
## fitMovResHun(dat, c(4, 0.5, 0.1, 25, 0.8))
## fitMovResHun.parallel(dat, c(4, 0.5, 0.1, 25, 0.8))

}
\references{
Pozdnyakov, V., Elbroch, L.M., Hu, C., Meyer, T., and Yan, J. (2018+)
On estimation for Brownian motion governed by telegraph process with
multiple off states. (Under Review)
}
\seealso{
\code{\link{rMovResHun}} for simulation.
}
\author{
Chaoran Hu
}
